§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.scalar == insert ==
my	$<CURSOR>;
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.scalar-assign == insert ==
my	$<CURSOR>	= <+val+>;
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.scalar2 == insert ==
my	( $<CURSOR>, $<+name+> );
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.array == insert ==
my	@<CURSOR>;
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.array-assign == insert ==
my	@<CURSOR>	= ( <+val+>, <+val+>, );
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.hash ==
my	%<CURSOR>;
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.hash-assign == insert ==
my	%<CURSOR>	= (
	<+key1+> => <+val1+>,
	<+key2+> => <+val2+>,
	);
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.regex == insert ==
my	$rgx_<CURSOR>	= qr/<+regexp+>/;
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.match == insert ==
$<CURSOR> =~ m/<+regexp+>/xm
§---------- PBP : use m{} in preference to m// in multiline expressions
§$<CURSOR> =~ m{}xm
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.substitute == insert ==
$<CURSOR> =~ s/<+pattern+>/<+replacement+>/xm
§---------- PBP : use s{} in preference to s// in multiline expressions
§$<CURSOR> =~ s{}xm
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.translate == insert ==
$<CURSOR> =~ tr/<+searchlist+>/<+replacementlist+>/
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.subroutine ==
sub |?FUNCTION_NAME| {
	my	( $par1<CURSOR> )	= @_;
<SPLIT>	return ;
} ## --- end sub |FUNCTION_NAME|
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.print == insert ==
print "<CURSOR>\n";
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.open-input-file ==
my	$|?FILEPOINTER|_file_name = '<CURSOR>';		# input file name

open  my $|FILEPOINTER|, '<', $|FILEPOINTER|_file_name
or die  "$0 : failed to open  input file '$|FILEPOINTER|_file_name' : $!\n";

<SPLIT>{-continue here-}
close  $|FILEPOINTER|
or warn "$0 : failed to close input file '$|FILEPOINTER|_file_name' : $!\n";

§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.open-output-file ==
my	$|?FILEPOINTER|_file_name = '<CURSOR>';		# output file name

open  my $|FILEPOINTER|, '>', $|FILEPOINTER|_file_name
or die  "$0 : failed to open  output file '$|FILEPOINTER|_file_name' : $!\n";

<SPLIT>{-continue here-}
close  $|FILEPOINTER|
or warn "$0 : failed to close output file '$|FILEPOINTER|_file_name' : $!\n";

§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== idioms.open-pipe ==
my	$|?PIPE|_command = " |<CURSOR> ";		# pipe command

open  my $|PIPE|, $|PIPE|_command
or die  "$0 : failed to open  pipe '$|PIPE|_command' : $!\n";

<SPLIT>{-continue here-}
close  $|PIPE|
or warn "$0 : failed to close pipe '$|PIPE|_command' : $!\n";

§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
